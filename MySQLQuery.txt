show databases;
use retail_db;
show tables;
select * from orders;
select * from products;
select * from users;
select * from reviews;

select id, count(id) from orders group by id order by count(id) desc;

select * from orders order by created_at asc;

select product_id, title, sum(total) as sales from orders o, products p 
where o.product_id = p.id  and year(o.created_at) = 2015 group by product_id order by sales desc LIMIT 5;

SELECT p.category, p.title, p.price
FROM (
    SELECT title, category, price,
           dense_rank() OVER (PARTITION BY category ORDER BY price DESC, title ASC) AS seq_no
    FROM products
) AS p
WHERE p.seq_no <= 5;

select category, min(price) as Minimum, max(price) as Maximum, avg(price) as Average from products
group by category;

select vendor, count(o.id) as Orders from orders o inner join products p on o.product_id = p.id
group by vendor order by Orders desc;

select p.title, min(r.rating) as minimum, max(r.rating) as maximum, avg(r.rating) as average from orders o inner join products p on o.product_id = p.id 
left join reviews r on o.product_id = r.product_id group by o.product_id;

select p.title from products p where p.id not in (select product_id from orders where year(created_at) = 2019 
and (month(created_at) = 11 or month(created_at) = 12));
